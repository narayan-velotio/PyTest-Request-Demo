name: API Test Framework CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up Allure
      run: |
        curl -o allure-2.24.1.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
        sudo tar -zxvf allure-2.24.1.tgz -C /opt/
        sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
        allure --version

    - name: Create directories
      run: |
        mkdir -p allure-results
        mkdir -p allure-report

    - name: Check API Health
      run: |
        echo "Checking API health..."
        check_endpoint() {
          local endpoint=$1
          local method=$2
          echo "Testing $method $endpoint"
          response=$(curl -s -X $method -w "\n%{http_code}" $endpoint)
          status_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | sed '$d')
          echo "Status code: $status_code"
          echo "Response body: $response_body"
          return $([ "$status_code" -lt 500 ])
        }

        API_BASE="https://api.restful-api.dev/objects"
        
        # Test main endpoints
        for i in {1..3}; do
          echo "Attempt $i:"
          
          # Test GET all objects
          check_endpoint "$API_BASE" "GET"
          get_status=$?
          
          # Test GET single object
          check_endpoint "$API_BASE/1" "GET"
          get_single_status=$?
          
          if [ $get_status -eq 0 ] && [ $get_single_status -eq 0 ]; then
            echo "API is responding correctly!"
            break
          fi
          
          if [ $i -eq 3 ]; then
            echo "API health check failed after 3 attempts"
            exit 1
          fi
          
          echo "Retrying in 10 seconds..."
          sleep 10
        done

    - name: Run sequential CRUD test
      id: crud_test
      continue-on-error: true
      env:
        BASE_URL: https://api.restful-api.dev/objects
        PYTHONUNBUFFERED: "1"
      run: |
        echo "Running CRUD sequence test..."
        pytest tests/test_crud_sequence.py -v -s --alluredir=allure-results
        
    - name: Run other API tests
      id: other_tests
      if: always()
      continue-on-error: true
      env:
        BASE_URL: https://api.restful-api.dev/objects
        PYTHONUNBUFFERED: "1"
      run: |
        echo "Running other API tests..."
        pytest tests/test_get_api.py tests/test_multiple_ids_api.py -v -s --alluredir=allure-results --reruns 3 --reruns-delay 5
        
    - name: Generate Allure Report
      if: always()
      run: |
        echo "Test Results Summary:"
        echo "CRUD Test Status: ${{ steps.crud_test.outcome }}"
        echo "Other Tests Status: ${{ steps.other_tests.outcome }}"
        
        ls -la allure-results || true
        allure generate allure-results --clean -o allure-report || true
        ls -la allure-report || true
        
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: |
          allure-report/
          allure-results/
        if-no-files-found: warn
        
    - name: Configure Git
      if: github.ref == 'refs/heads/master' && always()
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/master' && always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        force_orphan: true
        
    - name: Check test status
      if: always()
      run: |
        if [[ "${{ steps.crud_test.outcome }}" == "failure" || "${{ steps.other_tests.outcome }}" == "failure" ]]; then
          echo "Tests failed!"
          exit 1
        fi 
